services:
  webhook-db:
    image: postgres:17.2-alpine
    environment:
      POSTGRES_DB: webhook_db
      POSTGRES_USER: "webhook_admin"
      POSTGRES_PASSWORD: "password123"
    restart: always
    volumes:
      - webhook-data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U webhook_admin -d webhook_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webhook-network
    mem_limit: 2g
    cpus: 2.0

  webhook-redis:
    image: bitnami/redis:6.2
    container_name: webhook-redis
    restart: always
    ports:
      - '6389:6379'
    networks:
      - webhook-network
    command: redis-server --loglevel warning --protected-mode no --save "" --appendonly no
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - webhook-redis-data:/data
    mem_limit: 2g
    cpus: 2.0

  webhook-benchmark:
    build:
      context: .
      dockerfile: ./deploy/webhook/development/benchmark.Dockerfile
    container_name: webhook-benchmark-app
    networks:
      - webhook-network
    mem_limit: 1g
    cpus: 1.0   # ‚Üê 1 core, 1 GB RAM for benchmark app
    depends_on:
      - webhook-db
      - webhook-redis
    environment:
      REDIS_ADDR: webhook-redis:6379
      POSTGRES_URL: postgres://webhook_admin:password123@webhook-db:5432/webhook_db
      INSERT_COUNT: 1000
      INSERT_RATE: 1000

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://webhook_admin:password123@webhook-db:5432/webhook_db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - webhook-network
    depends_on:
      - webhook-db

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    networks:
      - webhook-network
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/webhook/development/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - webhook-network
    depends_on:
      - postgres-exporter
      - node-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - webhook-network
    depends_on:
      - prometheus

  nats:
    image: nats:2.10
    restart: unless-stopped
    command:
      - "-js"
      - "--auth"
      - "supersecret"
    ports:
      - "4222:4222"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - nats_net

networks:
  nats_net:
    driver: bridge
  webhook-network:
    driver: bridge

volumes:
  webhook-data:
  webhook-redis-data:
  prometheus-data:
  grafana-data:
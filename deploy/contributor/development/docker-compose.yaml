services:
  contributor-db:
    image: postgres:17.2-alpine
    environment:
      - 'POSTGRES_DB=contributor_db'
      - 'POSTGRES_USER=contributor_admin'
      - 'POSTGRES_PASSWORD=password123'
    restart: always
    profiles:
      - contributor
    ports:
      - "5432:5432"
    volumes:
      - contributor-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contributor_admin -d contributor_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  contributor-redis:
    image: redis:8.0-M03-alpine3.21
    restart: always
    command: redis-server --loglevel warning --protected-mode no --save "" --appendonly no
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    profiles:
      - contributor
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  contributor-service:
    build:
      context: .
      dockerfile: ./deploy/contributor/development/Dockerfile
      args:
        GO_IMAGE_NAME: ${GO_IMAGE_NAME}
        GO_IMAGE_VERSION: ${GO_IMAGE_VERSION}
    image: ${SERVICE_NAME}-contributor:${GO_IMAGE_NAME}-${GO_IMAGE_VERSION}
    command: /bin/sh -c "go run cmd/contributor/main.go migrate --up && air -c /home/app/.air/.air.contributor.toml"
    depends_on:
      contributor-db:
        condition: service_healthy
      contributor-redis:
        condition: service_healthy
    volumes:
      - ./:/home/app
      - contributor-go-mod-cache:/go/pkg/mod
    profiles:
      - contributor

    labels:
      # routers with authentication
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}_user.service=${SERVICE_NAME}_user"
      - "traefik.http.routers.${SERVICE_NAME}_user.rule=Host(`${SERVICE_DOMAIN}`)&&PathPrefix(`/contributors`)"
      - "traefik.http.routers.${SERVICE_NAME}_user.entrypoints=web"
      - "traefik.http.services.${SERVICE_NAME}_user.loadbalancer.server.port=5001"

      # routers without authentication
      - "traefik.http.routers.${SERVICE_NAME}_user_no_auth.service=${SERVICE_NAME}_user"
      - "traefik.http.routers.${SERVICE_NAME}_user_no_auth.rule=Host(`${SERVICE_DOMAIN}`) && (
          PathPrefix(`/contributors/v1/health-check`) ||
          PathPrefix(`/contributors/v1/profile`) ||
          PathPrefix(`/contributors/v1/create`)
        )"
      - "traefik.http.routers.${SERVICE_NAME}_user_no_auth.entrypoints=web"
      - "traefik.http.routers.${SERVICE_NAME}_user_no_auth.middlewares=${SERVICE_NAME}_strip_user"


      # middlewares
      - "traefik.http.middlewares.${SERVICE_NAME}_strip_user.stripprefix.prefixes=/contributors"
      - "traefik.http.routers.${SERVICE_NAME}_user.middlewares=rankr_auth@file,${SERVICE_NAME}_strip_user"
volumes:
  contributor-data:
  contributor-go-mod-cache:
syntax = "proto3";

package event;
import "google/protobuf/timestamp.proto";
option go_package = "protobuf/golang/eventpb";

enum EventName {
  EVENT_NAME_UNSPECIFIED = 0;

  PULL_REQUEST_OPENED = 1;
  PULL_REQUEST_CLOSED = 2;
  PULL_REQUEST_REVIEW_SUBMITTED = 3;

  ISSUE_OPENED = 4;
  ISSUE_CLOSED = 5;
  ISSUE_COMMENTED = 6;

  COMMIT_PUSHED = 7;

  REPOSITORY_FORKED = 8;
}

enum ReviewState {
  REVIEW_STATE_UNSPECIFIED = 0;
  APPROVED = 1;
  CHANGES_REQUESTED = 2;
  COMMENTED = 3;
}

enum IssueCloseReason {
  ISSUE_CLOSE_REASON_UNSPECIFIED = 0;
  COMPLETED = 1;
  NOT_PLANNED = 2;        // Won't fix, duplicate, etc.
  REOPENED = 3;
}

enum PrCloseReason {
  PR_CLOSE_REASON_UNSPECIFIED = 0;
  MERGED = 1;
  CLOSED_WITHOUT_MERGE = 2;
  DRAFT_CONVERTED = 3;
}

message Event {
  string id = 1;
  EventName event_name = 2;
  google.protobuf.Timestamp time = 3;
  string repository_id = 4;
  string repository_name = 5;

  oneof payload {
    PullRequestOpenedPayload pr_opened_payload = 100;
    PullRequestClosedPayload pr_closed_payload = 101;
    PullRequestReviewSubmittedPayload pr_review_payload = 102;
    IssueOpenedPayload issue_opened_payload = 103;
    IssueClosedPayload issue_closed_payload = 104;
    IssueCommentedPayload issue_commented_payload = 105;
    PushPayload push_payload = 106;
    RepositoryForkedPayload repo_forked_payload = 107;
  }
}

message PullRequestOpenedPayload {
  string user_id = 1;
  string pr_number = 2;
  string title = 3;
  string branch_name = 4;
  string target_branch = 5;
  bool is_draft = 6;
  repeated string labels = 7;
  google.protobuf.Timestamp deadline = 8;
}

message PullRequestClosedPayload {
  string user_id = 1;
  string merger_user_id = 2;       // Person who merged (same as user_id if not merged)
  string pr_number = 3;
  PrCloseReason close_reason = 4;
  bool merged = 5;
  int32 additions = 6;
  int32 deletions = 7;
  int32 files_changed = 8;
  int32 commits_count = 9;
  google.protobuf.Timestamp deadline = 10;
  bool met_deadline = 11;
  repeated string labels = 12;
  string target_branch = 13;
  bool is_documentation = 14;       // Is this a documentation PR?
  repeated string documentation_types = 15;  // ["README", "API Documentation", etc.]
}

message PullRequestReviewSubmittedPayload {
  string reviewer_user_id = 1;
  string pr_author_user_id = 2;
  string pr_number = 3;
  ReviewState state = 4;
  int32 comments_count = 5;
  bool is_security_review = 6;
}

message IssueOpenedPayload {
  string user_id = 1;
  string issue_number = 2;
  string title = 3;
  repeated string labels = 4;
  bool is_bug_report = 5;
  bool is_feature_request = 6;
  bool has_reproduction_steps = 7;
  int32 body_length = 8;
}

message IssueClosedPayload {
  string user_id = 1;
  string issue_author_id = 2;
  string issue_number = 3;
  IssueCloseReason close_reason = 4;
  repeated string labels = 5;
  google.protobuf.Timestamp opened_at = 6;
  int32 comments_count = 7;
  string closing_pr_number = 8;
}

message IssueCommentedPayload {
  string user_id = 1;
  string issue_author_id = 2;
  string issue_number = 3;
  int32 comment_length = 4;
  bool contains_code = 5;
  bool is_solution = 6;
}

message PushPayload {
  string user_id = 1;
  string branch_name = 2;
  bool is_main_branch = 3;
  int32 commits_count = 4;
  repeated CommitInfo commits = 5;
  int32 total_additions = 6;
  int32 total_deletions = 7;
  int32 files_changed = 8;
}

message CommitInfo {
  string sha = 1;
  string message = 2;
  int32 additions = 3;
  int32 deletions = 4;
  int32 files_changed = 5;
  bool is_merge_commit = 6;
  repeated string modified_file_types = 7;    // .go, .md, .yaml, etc.
}

message RepositoryForkedPayload {
  string user_id = 1;
  string fork_repository_id = 2;
}

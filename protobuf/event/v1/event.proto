syntax = "proto3";

package event.v1;
import "google/protobuf/timestamp.proto";
option go_package = "protobuf/golang/eventpb";

enum EventName {
  EVENT_NAME_UNSPECIFIED = 0;

  EVENT_NAME_PULL_REQUEST_OPENED = 1;
  EVENT_NAME_PULL_REQUEST_CLOSED = 2;
  EVENT_NAME_PULL_REQUEST_REVIEW_SUBMITTED = 3;

  EVENT_NAME_ISSUE_OPENED = 4;
  EVENT_NAME_ISSUE_CLOSED = 5;
  EVENT_NAME_ISSUE_COMMENTED = 6;

  EVENT_NAME_PUSHED = 7;
}

enum ReviewState {
  REVIEW_STATE_UNSPECIFIED = 0;
  REVIEW_STATE_APPROVED = 1;
  REVIEW_STATE_CHANGES_REQUESTED = 2;
  REVIEW_STATE_COMMENTED = 3;
}

enum IssueCloseReason {
  ISSUE_CLOSE_REASON_UNSPECIFIED = 0;
  ISSUE_CLOSE_REASON_COMPLETED = 1;
  ISSUE_CLOSE_REASON_NOT_PLANNED = 2;        // Won't fix, duplicate, etc.
  ISSUE_CLOSE_REASON_REOPENED = 3;
}

enum PrCloseReason {
  PR_CLOSE_REASON_UNSPECIFIED = 0;
  PR_CLOSE_REASON_MERGED = 1;
  PR_CLOSE_REASON_CLOSED_WITHOUT_MERGE = 2;
  PR_CLOSE_REASON_DRAFT_CONVERTED = 3;
}

enum EventProvider{
  Event_Provider_Github = 0;
}

message Event {
  string id = 1;
  EventName event_name = 2;
  google.protobuf.Timestamp time = 3;
  uint64 repository_id = 4;
  string repository_name = 5;
  EventProvider provider = 6;

  oneof payload {
    PullRequestOpenedPayload pr_opened_payload = 100;
    PullRequestClosedPayload pr_closed_payload = 101;
    PullRequestReviewSubmittedPayload pr_review_payload = 102;
    IssueOpenedPayload issue_opened_payload = 103;
    IssueClosedPayload issue_closed_payload = 104;
    IssueCommentedPayload issue_commented_payload = 105;
    PushPayload push_payload = 106;
//    RepositoryForkedPayload repo_forked_payload = 107;
  }
}


message PullRequestOpenedPayload {
  uint64 user_id = 1;
  uint64 pr_id = 2;
  int32 pr_number = 3;
  string title = 4;
  string branch_name = 5;
  string target_branch = 6;
  repeated string labels = 7;
//  google.protobuf.Timestamp deadline = 8;
  repeated uint64 assignees = 9;
}

message PullRequestClosedPayload {
  uint64 user_id = 1;
  uint64 merger_user_id = 2;       // Person who merged (same as user_id if not merged)
  uint64 pr_id = 3;
  int32 pr_number = 4;
  PrCloseReason close_reason = 5;
  optional bool merged = 6;
  int32 additions = 7;
  int32 deletions = 8;
  int32 files_changed = 9;
  int32 commits_count = 10;
//  google.protobuf.Timestamp deadline = 11;
//  bool met_deadline = 12;
  repeated string labels = 13;
  string target_branch = 14;
//  bool is_documentation = 15;
//  repeated string documentation_types = 16;  // ["README", "API Documentation", etc.]
  repeated uint64 assignees = 17;
}

message PullRequestReviewSubmittedPayload {
  uint64 reviewer_user_id = 1;
  uint64 pr_author_user_id = 2;
  uint64 pr_id = 3;
  int32 pr_number = 4;
  ReviewState state = 5;
}

message IssueOpenedPayload {
  uint64 user_id = 1;
  uint64 issue_id = 2;
  int32 issue_number = 3;
  string title = 4;
  repeated string labels = 5;
//  bool is_bug_report = 6;
//  bool is_feature_request = 7;
//  bool has_reproduction_steps = 8;
//  int32 body_length = 9;
}

message IssueClosedPayload {
  uint64 user_id = 1;
  uint64 issue_author_id = 2;
  uint64 issue_id = 3;
  int32 issue_number = 4;
  IssueCloseReason close_reason = 5;
  repeated string labels = 6;
  google.protobuf.Timestamp opened_at = 7;
  int32 comments_count = 8;
  int32 closing_pr_number = 9;
}

message IssueCommentedPayload {
  uint64 user_id = 1;
  uint64 issue_author_id = 2;
  uint64 issue_id = 3;
  int32 issue_number = 4;
  int32 comment_length = 5;
  bool contains_code = 6;
//  bool is_solution = 7;
}

message PushPayload {
  uint64 user_id = 1;
  string branch_name = 2;
  int32 commits_count = 3;
  repeated CommitInfo commits = 4;
}

message CommitInfo {
  string author_name = 1;
  string commit_id = 2;
  string message = 3;
  int32 additions = 4;
  int32 deletions = 5;
  int32 modified = 6;
}

//message RepositoryForkedPayload {
//  uint64 user_id = 1;
//  uint64 fork_repository_id = 2;
//}

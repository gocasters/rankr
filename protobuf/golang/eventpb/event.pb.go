// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.5
// source: event.proto

package eventpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO: This enum defines the high-level event categories within the system.
// This list should be reviewed and finalized once the event mapping strategy
// in the webhook service is fully defined according to business requirements.
type EventName int32

const (
	// The default value, ensuring that uninitialized events are not accidentally processed.
	EventName_EVENT_NAME_UNSPECIFIED EventName = 0
	// A single event name for all user contributions relevant to scoring.
	EventName_CONTRIBUTION_REGISTERED EventName = 1
)

// Enum value maps for EventName.
var (
	EventName_name = map[int32]string{
		0: "EVENT_NAME_UNSPECIFIED",
		1: "CONTRIBUTION_REGISTERED",
	}
	EventName_value = map[string]int32{
		"EVENT_NAME_UNSPECIFIED":  0,
		"CONTRIBUTION_REGISTERED": 1,
	}
)

func (x EventName) Enum() *EventName {
	p := new(EventName)
	*p = x
	return p
}

func (x EventName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventName) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[0].Descriptor()
}

func (EventName) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[0]
}

func (x EventName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventName.Descriptor instead.
func (EventName) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventName EventName              `protobuf:"varint,2,opt,name=event_name,json=eventName,proto3,enum=protobuf.event.EventName" json:"event_name,omitempty"`
	Time      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Event_ContributionRegisteredPayload
	Payload       isEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetEventName() EventName {
	if x != nil {
		return x.EventName
	}
	return EventName_EVENT_NAME_UNSPECIFIED
}

func (x *Event) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Event) GetPayload() isEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Event) GetContributionRegisteredPayload() *ContributionRegisteredPayload {
	if x != nil {
		if x, ok := x.Payload.(*Event_ContributionRegisteredPayload); ok {
			return x.ContributionRegisteredPayload
		}
	}
	return nil
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_ContributionRegisteredPayload struct {
	ContributionRegisteredPayload *ContributionRegisteredPayload `protobuf:"bytes,100,opt,name=contribution_registered_payload,json=contributionRegisteredPayload,proto3,oneof"`
}

func (*Event_ContributionRegisteredPayload) isEvent_Payload() {}

type ContributionRegisteredPayload struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserId    string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Example values: "PULL_REQUEST_MERGED", "PULL_REQUEST_REVIEW_SUBMITTED"
	EventType  string `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	ScoreValue int32  `protobuf:"varint,4,opt,name=score_value,json=scoreValue,proto3" json:"score_value,omitempty"`
	// URL of a pull request, an issue number, or a commit SHA
	SourceReference string `protobuf:"bytes,5,opt,name=source_reference,json=sourceReference,proto3" json:"source_reference,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ContributionRegisteredPayload) Reset() {
	*x = ContributionRegisteredPayload{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributionRegisteredPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributionRegisteredPayload) ProtoMessage() {}

func (x *ContributionRegisteredPayload) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributionRegisteredPayload.ProtoReflect.Descriptor instead.
func (*ContributionRegisteredPayload) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *ContributionRegisteredPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ContributionRegisteredPayload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ContributionRegisteredPayload) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ContributionRegisteredPayload) GetScoreValue() int32 {
	if x != nil {
		return x.ScoreValue
	}
	return 0
}

func (x *ContributionRegisteredPayload) GetSourceReference() string {
	if x != nil {
		return x.SourceReference
	}
	return ""
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\x0eprotobuf.event\x1a\x1fgoogle/protobuf/timestamp.proto\"\x85\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\n" +
	"event_name\x18\x02 \x01(\x0e2\x19.protobuf.event.EventNameR\teventName\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12w\n" +
	"\x1fcontribution_registered_payload\x18d \x01(\v2-.protobuf.event.ContributionRegisteredPayloadH\x00R\x1dcontributionRegisteredPayloadB\t\n" +
	"\apayload\"\xc2\x01\n" +
	"\x1dContributionRegisteredPayload\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12\x1f\n" +
	"\vscore_value\x18\x04 \x01(\x05R\n" +
	"scoreValue\x12)\n" +
	"\x10source_reference\x18\x05 \x01(\tR\x0fsourceReference*D\n" +
	"\tEventName\x12\x1a\n" +
	"\x16EVENT_NAME_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CONTRIBUTION_REGISTERED\x10\x01B4Z2github.com/gocasters/rankr/protobuf/golang/eventpbb\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_event_proto_goTypes = []any{
	(EventName)(0),                        // 0: protobuf.event.EventName
	(*Event)(nil),                         // 1: protobuf.event.Event
	(*ContributionRegisteredPayload)(nil), // 2: protobuf.event.ContributionRegisteredPayload
	(*timestamppb.Timestamp)(nil),         // 3: google.protobuf.Timestamp
}
var file_event_proto_depIdxs = []int32{
	0, // 0: protobuf.event.Event.event_name:type_name -> protobuf.event.EventName
	3, // 1: protobuf.event.Event.time:type_name -> google.protobuf.Timestamp
	2, // 2: protobuf.event.Event.contribution_registered_payload:type_name -> protobuf.event.ContributionRegisteredPayload
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_event_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_ContributionRegisteredPayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		EnumInfos:         file_event_proto_enumTypes,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: event/event.proto

package eventpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventName int32

const (
	EventName_EVENT_NAME_UNSPECIFIED        EventName = 0
	EventName_PULL_REQUEST_CLOSED           EventName = 1
	EventName_PULL_REQUEST_REVIEW_SUBMITTED EventName = 2
	EventName_ISSUE_OPENED                  EventName = 3
)

// Enum value maps for EventName.
var (
	EventName_name = map[int32]string{
		0: "EVENT_NAME_UNSPECIFIED",
		1: "PULL_REQUEST_CLOSED",
		2: "PULL_REQUEST_REVIEW_SUBMITTED",
		3: "ISSUE_OPENED",
	}
	EventName_value = map[string]int32{
		"EVENT_NAME_UNSPECIFIED":        0,
		"PULL_REQUEST_CLOSED":           1,
		"PULL_REQUEST_REVIEW_SUBMITTED": 2,
		"ISSUE_OPENED":                  3,
	}
)

func (x EventName) Enum() *EventName {
	p := new(EventName)
	*p = x
	return p
}

func (x EventName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventName) Descriptor() protoreflect.EnumDescriptor {
	return file_event_event_proto_enumTypes[0].Descriptor()
}

func (EventName) Type() protoreflect.EnumType {
	return &file_event_event_proto_enumTypes[0]
}

func (x EventName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventName.Descriptor instead.
func (EventName) EnumDescriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventName EventName              `protobuf:"varint,2,opt,name=event_name,json=eventName,proto3,enum=event.EventName" json:"event_name,omitempty"`
	Time      *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Event_PrClosedPayload
	//	*Event_PrReviewPayload
	//	*Event_IssueOpenedPayload
	Payload       isEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetEventName() EventName {
	if x != nil {
		return x.EventName
	}
	return EventName_EVENT_NAME_UNSPECIFIED
}

func (x *Event) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Event) GetPayload() isEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Event) GetPrClosedPayload() *PullRequestClosedPayload {
	if x != nil {
		if x, ok := x.Payload.(*Event_PrClosedPayload); ok {
			return x.PrClosedPayload
		}
	}
	return nil
}

func (x *Event) GetPrReviewPayload() *PullRequestReviewSubmittedPayload {
	if x != nil {
		if x, ok := x.Payload.(*Event_PrReviewPayload); ok {
			return x.PrReviewPayload
		}
	}
	return nil
}

func (x *Event) GetIssueOpenedPayload() *IssueOpenedPayload {
	if x != nil {
		if x, ok := x.Payload.(*Event_IssueOpenedPayload); ok {
			return x.IssueOpenedPayload
		}
	}
	return nil
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_PrClosedPayload struct {
	PrClosedPayload *PullRequestClosedPayload `protobuf:"bytes,100,opt,name=pr_closed_payload,json=prClosedPayload,proto3,oneof"`
}

type Event_PrReviewPayload struct {
	PrReviewPayload *PullRequestReviewSubmittedPayload `protobuf:"bytes,101,opt,name=pr_review_payload,json=prReviewPayload,proto3,oneof"`
}

type Event_IssueOpenedPayload struct {
	IssueOpenedPayload *IssueOpenedPayload `protobuf:"bytes,102,opt,name=issue_opened_payload,json=issueOpenedPayload,proto3,oneof"`
}

func (*Event_PrClosedPayload) isEvent_Payload() {}

func (*Event_PrReviewPayload) isEvent_Payload() {}

func (*Event_IssueOpenedPayload) isEvent_Payload() {}

type PullRequestClosedPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Merged        bool                   `protobuf:"varint,3,opt,name=merged,proto3" json:"merged,omitempty"`
	Additions     int32                  `protobuf:"varint,4,opt,name=additions,proto3" json:"additions,omitempty"`
	Deletions     int32                  `protobuf:"varint,5,opt,name=deletions,proto3" json:"deletions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullRequestClosedPayload) Reset() {
	*x = PullRequestClosedPayload{}
	mi := &file_event_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequestClosedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestClosedPayload) ProtoMessage() {}

func (x *PullRequestClosedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestClosedPayload.ProtoReflect.Descriptor instead.
func (*PullRequestClosedPayload) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{1}
}

func (x *PullRequestClosedPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PullRequestClosedPayload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PullRequestClosedPayload) GetMerged() bool {
	if x != nil {
		return x.Merged
	}
	return false
}

func (x *PullRequestClosedPayload) GetAdditions() int32 {
	if x != nil {
		return x.Additions
	}
	return 0
}

func (x *PullRequestClosedPayload) GetDeletions() int32 {
	if x != nil {
		return x.Deletions
	}
	return 0
}

type PullRequestReviewSubmittedPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"` // "approved", "changes_requested", "commented"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullRequestReviewSubmittedPayload) Reset() {
	*x = PullRequestReviewSubmittedPayload{}
	mi := &file_event_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequestReviewSubmittedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestReviewSubmittedPayload) ProtoMessage() {}

func (x *PullRequestReviewSubmittedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestReviewSubmittedPayload.ProtoReflect.Descriptor instead.
func (*PullRequestReviewSubmittedPayload) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *PullRequestReviewSubmittedPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PullRequestReviewSubmittedPayload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PullRequestReviewSubmittedPayload) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type IssueOpenedPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueOpenedPayload) Reset() {
	*x = IssueOpenedPayload{}
	mi := &file_event_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueOpenedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueOpenedPayload) ProtoMessage() {}

func (x *IssueOpenedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueOpenedPayload.ProtoReflect.Descriptor instead.
func (*IssueOpenedPayload) Descriptor() ([]byte, []int) {
	return file_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *IssueOpenedPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IssueOpenedPayload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

var File_event_event_proto protoreflect.FileDescriptor

const file_event_event_proto_rawDesc = "" +
	"\n" +
	"\x11event/event.proto\x12\x05event\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf9\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\n" +
	"event_name\x18\x02 \x01(\x0e2\x10.event.EventNameR\teventName\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12M\n" +
	"\x11pr_closed_payload\x18d \x01(\v2\x1f.event.PullRequestClosedPayloadH\x00R\x0fprClosedPayload\x12V\n" +
	"\x11pr_review_payload\x18e \x01(\v2(.event.PullRequestReviewSubmittedPayloadH\x00R\x0fprReviewPayload\x12M\n" +
	"\x14issue_opened_payload\x18f \x01(\v2\x19.event.IssueOpenedPayloadH\x00R\x12issueOpenedPayloadB\t\n" +
	"\apayload\"\xa6\x01\n" +
	"\x18PullRequestClosedPayload\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x16\n" +
	"\x06merged\x18\x03 \x01(\bR\x06merged\x12\x1c\n" +
	"\tadditions\x18\x04 \x01(\x05R\tadditions\x12\x1c\n" +
	"\tdeletions\x18\x05 \x01(\x05R\tdeletions\"q\n" +
	"!PullRequestReviewSubmittedPayload\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\"L\n" +
	"\x12IssueOpenedPayload\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId*u\n" +
	"\tEventName\x12\x1a\n" +
	"\x16EVENT_NAME_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13PULL_REQUEST_CLOSED\x10\x01\x12!\n" +
	"\x1dPULL_REQUEST_REVIEW_SUBMITTED\x10\x02\x12\x10\n" +
	"\fISSUE_OPENED\x10\x03B\x19Z\x17protobuf/golang/eventpbb\x06proto3"

var (
	file_event_event_proto_rawDescOnce sync.Once
	file_event_event_proto_rawDescData []byte
)

func file_event_event_proto_rawDescGZIP() []byte {
	file_event_event_proto_rawDescOnce.Do(func() {
		file_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_event_proto_rawDesc), len(file_event_event_proto_rawDesc)))
	})
	return file_event_event_proto_rawDescData
}

var file_event_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_event_event_proto_goTypes = []any{
	(EventName)(0),                            // 0: event.EventName
	(*Event)(nil),                             // 1: event.Event
	(*PullRequestClosedPayload)(nil),          // 2: event.PullRequestClosedPayload
	(*PullRequestReviewSubmittedPayload)(nil), // 3: event.PullRequestReviewSubmittedPayload
	(*IssueOpenedPayload)(nil),                // 4: event.IssueOpenedPayload
	(*timestamp.Timestamp)(nil),               // 5: google.protobuf.Timestamp
}
var file_event_event_proto_depIdxs = []int32{
	0, // 0: event.Event.event_name:type_name -> event.EventName
	5, // 1: event.Event.time:type_name -> google.protobuf.Timestamp
	2, // 2: event.Event.pr_closed_payload:type_name -> event.PullRequestClosedPayload
	3, // 3: event.Event.pr_review_payload:type_name -> event.PullRequestReviewSubmittedPayload
	4, // 4: event.Event.issue_opened_payload:type_name -> event.IssueOpenedPayload
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_event_event_proto_init() }
func file_event_event_proto_init() {
	if File_event_event_proto != nil {
		return
	}
	file_event_event_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_PrClosedPayload)(nil),
		(*Event_PrReviewPayload)(nil),
		(*Event_IssueOpenedPayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_event_proto_rawDesc), len(file_event_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_event_proto_goTypes,
		DependencyIndexes: file_event_event_proto_depIdxs,
		EnumInfos:         file_event_event_proto_enumTypes,
		MessageInfos:      file_event_event_proto_msgTypes,
	}.Build()
	File_event_event_proto = out.File
	file_event_event_proto_goTypes = nil
	file_event_event_proto_depIdxs = nil
}
